

It is replaced by an array operation, using the np.random module to randomly generate
a one-time result of 1000 coin flips (1 or -1), and then calculating the cumulative sum


nsteps=1000
draws = np.random.randint(0,2,size=nsteps)
steps=np.where(draws > 0 , 1, -1)
walk=steps.cumsum()


after this, You can calculate the maximum and minimum values, for example
walk.min() / walk.max()

(np.abs(walk) >= 10).argmax() 

It returns how long it takes for this random walk to be at least 10 steps away from the initial 0 point (in either direction)
