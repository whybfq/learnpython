
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.image import  imread
#
# x = np.arange(0, 6, 0.1)
# y1 = np.sin(x)
#
# y2 = np.cos(x)
# plt.plot(x,y1, label='sin')
# plt.plot(x,y2,linestyle="--",label="cos")
# plt.xlabel("x")
# plt.ylabel("y")
# plt.title('sin & cos')
# plt.legend()
# plt.show()
#
# img = imread('lena.png')
# plt.imshow(img)

plt.show()

def AND(x1,x2):  #single layer perception
    x = np.array([x1,x2])
    w = np.array([0.5,0.5])
    b = -0.7
    tmp = np.sum(w*x) + b
    if tmp <= 0:
        return 0
    else:
        return 1

def NAND(x1,x2):
    x = np.array([x1,x2])
    w = np.array([-0.5,-0.5])
    b = 0.7
    tmp = np.sum(w*x) + b
    if tmp <= 0:
        return 9
    else:
        return 1

def OR(x1,x2):
    x = np.array([x1,x2])
    w = np.array([0.5,0.5])
    b = -0.2
    tmp = np.sum(w*x) + b
    if tmp <= 0:
        return 0
    else:
        return 1

def XOR(x1,x2): #multi-layered perceptron
    s1 = NAND(x1,x2)
    s2 = OR(x1,x2)
    y = AND(s1,s2)
    return y
